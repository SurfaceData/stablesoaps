datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("MIGRATION_DB_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Ingredient {
  id          Int    @id @default(autoincrement())
  name        String
  slug        String @unique
  // Values:
  // - base_oil
  // - essential_oil
  // - lye
  // - water
  type        String
  // Values:
  // - grams
  // - milliliters
  measurement String

  IngredientPurchase IngredientPurchase[]
  InventoryItem      InventoryItem[]
  RecipeWaterItem    RecipeWaterItem[]
  RecipeLyeItem      RecipeLyeItem[]
  RecipeBaseItem     RecipeBaseItem[]
  RecipeScentItem    RecipeScentItem[]
}

model InventoryItem {
  id           Int        @id @default(autoincrement())
  ingredientId Int        @unique
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  quantity     Float
}

model IngredientPurchase {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  quantity     Float
  price        Float

  PurchaseOrder   PurchaseOrder? @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId Int?
}

model PurchaseOrder {
  id           Int                  @id @default(autoincrement())
  // Values:
  // - created
  // - shipped
  // - completed
  status       String
  total        Float
  createDate   DateTime
  receiveDate  DateTime?
  supplierName String
  items        IngredientPurchase[]
}

model RecipeWaterItem {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  quantity     Float
  Recipe       Recipe[]
}

model RecipeLyeItem {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  quantity     Float
  Recipe       Recipe[]
}

model RecipeBaseItem {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  quantity     Float
  Recipe       Recipe?    @relation(fields: [recipeId], references: [id])
  recipeId     Int?
}

model RecipeScentItem {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  quantity     Float
  Recipe       Recipe?    @relation(fields: [recipeId], references: [id])
  recipeId     Int?
}

model Recipe {
  id         Int             @id @default(autoincrement())
  name       String
  slug       String          @unique
  originName String
  water      RecipeWaterItem @relation(fields: [waterId], references: [id])
  waterId    Int
  lye        RecipeLyeItem   @relation(fields: [lyeId], references: [id])
  lyeId      Int

  baseOils      RecipeBaseItem[]
  essentialOils RecipeScentItem[]
}
